tasks = [
    {
        "summary": "Add user authentication for enhanced security",
        "description": "Implement a robust user authentication system using Django, ensuring user credentials are securely stored and managed. Use JWT for token-based authentication, enabling session management to improve login security and user tracking.",
        "assignee_count": 3,
        "labels_count": 2,
        "comments": [
            "Consider adding multi-factor authentication for added security.",
            "Ensure password reset functionality is secure and user-friendly.",
        ],
        "subtasks": [
            {
                "summary": "Setup JWT authentication",
                "description": "Configure JWT-based authentication to handle user sessions securely.",
                "assignee_count": 1,
                "labels_count": 1,
                "comments": [
                    "Follow Django guidelines for token security.",
                    "Implement token expiration policies to improve security.",
                ],
            },
            {
                "summary": "Integrate password reset feature",
                "description": "Enable secure password reset functionality to allow users to recover access if needed.",
                "assignee_count": 2,
                "labels_count": 1,
                "comments": [],
            },
        ],
    },
    {
        "summary": "Optimize database queries for faster task retrieval",
        "description": "Analyze and optimize PostgreSQL queries in the task retrieval functions, reducing response time for fetching tasks. Consider adding indexes to frequently queried columns and limiting the returned data to necessary fields.",
        "assignee_count": 2,
        "labels_count": 1,
        "comments": [
            "Adding indexes on frequently accessed columns could improve speed.",
            "Review query performance with large datasets to verify improvements.",
        ],
        "subtasks": [
            {
                "summary": "Add indexes to critical columns",
                "description": "Add indexes to columns like status and priority to speed up query performance.",
                "assignee_count": 1,
                "labels_count": 1,
                "comments": ["Prioritize indexing columns with high query frequency."],
            },
            {
                "summary": "Limit task retrieval data",
                "description": "Reduce response size by limiting task data retrieval to essential fields only.",
                "assignee_count": 0,
                "labels_count": 0,
                "comments": [],
            },
        ],
    },
    {
        "summary": "Integrate Redis for caching frequently accessed data",
        "description": "Set up Redis to cache frequently accessed data, such as user and task details, to reduce database load. Configure cache invalidation policies to ensure data accuracy and support real-time updates as needed.",
        "assignee_count": 1,
        "labels_count": 2,
        "comments": [],
        "subtasks": [
            {
                "summary": "Set up Redis instance",
                "description": "Configure and deploy a Redis instance for caching data.",
                "assignee_count": 1,
                "labels_count": 1,
                "comments": [],
            },
            {
                "summary": "Implement caching logic",
                "description": "Integrate caching logic in the Django application to utilize Redis effectively.",
                "assignee_count": 0,
                "labels_count": 0,
                "comments": [],
            },
        ],
    },
    {
        "summary": "Develop REST API for task creation and management",
        "description": "Create a Django-based REST API that allows users to create, update, and delete tasks on the board. Secure and document the API to enable seamless frontend integration and efficient data handling for task management.",
        "assignee_count": 4,
        "labels_count": 3,
        "comments": [
            "Ensure API follows REST principles and uses proper status codes."
        ],
        "subtasks": [
            {
                "summary": "Define API endpoints",
                "description": "Outline all necessary API endpoints for task management.",
                "assignee_count": 2,
                "labels_count": 1,
                "comments": [],
            },
            {
                "summary": "Document API with Swagger",
                "description": "Use Swagger to document the API for easier integration.",
                "assignee_count": 0,
                "labels_count": 0,
                "comments": [],
            },
        ],
    },
    {
        "summary": "Design a Vue component for task details",
        "description": "Build a Vue.js component to display detailed task information like title, description, priority, and assigned user. Ensure consistency with the rest of the appâ€™s UI, making the component reusable and visually coherent.",
        "assignee_count": 2,
        "labels_count": 1,
        "comments": ["Ensure the component is responsive on mobile devices."],
        "subtasks": [
            {
                "summary": "Create task detail layout",
                "description": "Design the layout for the task detail component.",
                "assignee_count": 1,
                "labels_count": 1,
                "comments": [],
            }
        ],
    },
    {
        "summary": "Implement board drag-and-drop functionality for tasks",
        "description": "Enable users to drag and drop tasks between different board statuses using Vue. Ensure real-time status updates and backend synchronization, optimizing for smooth performance on large task boards.",
        "assignee_count": 3,
        "labels_count": 2,
        "comments": ["Test drag-and-drop functionality on mobile and desktop devices."],
        "subtasks": [
            {
                "summary": "Set up drag-and-drop library",
                "description": "Integrate a Vue-compatible drag-and-drop library.",
                "assignee_count": 2,
                "labels_count": 1,
                "comments": [],
            }
        ],
    },
    {
        "summary": "Set up automated testing for task CRUD operations",
        "description": "Establish automated tests using Django's testing framework to verify task creation, reading, updating, and deletion (CRUD). Cover edge cases and validate the reliability of core task management functions.",
        "assignee_count": 1,
        "labels_count": 1,
        "comments": [],
        "subtasks": [],
    },
    {
        "summary": "Enhance UI/UX for task priority selection",
        "description": "Redesign the priority selection UI to improve usability. Allow users to quickly adjust task priority with visual cues and ensure immediate backend updates. Focus on an accessible and intuitive design.",
        "assignee_count": 2,
        "labels_count": 2,
        "comments": ["Add color indicators to make priority levels visually clear."],
        "subtasks": [
            {
                "summary": "Redesign priority selector",
                "description": "Create a more intuitive priority selector UI.",
                "assignee_count": 1,
                "labels_count": 1,
                "comments": [],
            }
        ],
    },
    {
        "summary": "Enable task filtering and search functionality",
        "description": "Add filtering and search to help users locate tasks quickly by keywords, assigned users, and statuses. Optimize frontend and backend to handle search requests efficiently, especially on large boards.",
        "assignee_count": 2,
        "labels_count": 2,
        "comments": ["Enable multi-criteria filtering for better usability."],
        "subtasks": [],
    },
    {
        "summary": "Create notification system for task updates",
        "description": "Develop a notification system that alerts users of updates to assigned tasks. Integrate real-time updates using Django channels and Redis, allowing notifications to be enabled or disabled per user.",
        "assignee_count": 3,
        "labels_count": 3,
        "comments": ["Provide users with options to customize notification frequency."],
        "subtasks": [],
    },
    {
        "summary": "Implement pagination on task lists for large boards",
        "description": "Add pagination to task lists to handle large boards more efficiently. Ensure smooth navigation across pages and optimize backend queries to manage large datasets without performance degradation.",
        "assignee_count": 1,
        "labels_count": 1,
        "comments": [],
        "subtasks": [
            {
                "summary": "Design pagination layout",
                "description": "Create a layout for pagination controls.",
                "assignee_count": 1,
                "labels_count": 1,
                "comments": [],
            }
        ],
    },
    {
        "summary": "Design a user onboarding flow with guided steps",
        "description": "Create an onboarding flow that introduces new users to key features in a guided tour. Focus on clear, helpful tips to familiarize users with creating, updating, and managing tasks on the platform.",
        "assignee_count": 2,
        "labels_count": 2,
        "comments": [],
        "subtasks": [],
    },
    {
        "summary": "Add user role management for access control",
        "description": "Implement a role management system to control access to various features based on user roles. Include options for admins, managers, and team members, each with varying levels of permissions for task and board operations.",
        "assignee_count": 4,
        "labels_count": 3,
        "comments": ["Define clear permissions for each role type."],
        "subtasks": [],
    },
    {
        "summary": "Add email notifications for task assignments",
        "description": "Implement email notifications to alert users when they are assigned to a new task. Configure templates for different scenarios and ensure that users can opt-in or opt-out of these notifications through their settings.",
        "assignee_count": 2,
        "labels_count": 1,
        "comments": [],
        "subtasks": [
            {
                "summary": "Create email templates for notifications",
                "description": "Design and develop HTML email templates for task assignment notifications.",
                "assignee_count": 1,
                "labels_count": 1,
                "comments": [],
            },
            {
                "summary": "Integrate email sending functionality",
                "description": "Set up the backend logic to send emails when tasks are assigned.",
                "assignee_count": 0,
                "labels_count": 0,
                "comments": [],
            },
        ],
    },
    {
        "summary": "Enable file attachments for tasks",
        "description": "Allow users to attach files to tasks for better documentation and context. Ensure that the attachment process is smooth, with clear limits on file types and sizes, and that files are securely stored.",
        "assignee_count": 2,
        "labels_count": 2,
        "comments": [],
        "subtasks": [
            {
                "summary": "Create file upload interface",
                "description": "Design an intuitive file upload interface for users to attach documents to tasks.",
                "assignee_count": 1,
                "labels_count": 1,
                "comments": [],
            },
            {
                "summary": "Implement backend storage for attachments",
                "description": "Set up storage for uploaded files, ensuring security and ease of access.",
                "assignee_count": 0,
                "labels_count": 0,
                "comments": [],
            },
        ],
    },
    {
        "summary": "Implement task prioritization feature",
        "description": "Add a prioritization feature allowing users to mark tasks as high, medium, or low priority. Ensure that priority levels are visually distinct in the UI, facilitating better task management.",
        "assignee_count": 2,
        "labels_count": 2,
        "comments": ["Consider adding filters for viewing tasks by priority."],
        "subtasks": [],
    },
    {
        "summary": "Integrate third-party calendar for task scheduling",
        "description": "Develop functionality to sync tasks with third-party calendars like Google Calendar, enabling users to manage deadlines more effectively. Ensure secure authentication and seamless integration of events.",
        "assignee_count": 3,
        "labels_count": 3,
        "comments": ["Explore options for two-way synchronization for event updates."],
        "subtasks": [],
    },
    {
        "summary": "Create user feedback mechanism for improvement",
        "description": "Implement a user feedback system that allows users to submit suggestions and report issues directly from the app. Aggregate feedback for analysis and prioritize improvements based on user needs.",
        "assignee_count": 2,
        "labels_count": 1,
        "comments": [],
        "subtasks": [
            {
                "summary": "Design feedback submission form",
                "description": "Create a user-friendly form for submitting feedback within the app.",
                "assignee_count": 1,
                "labels_count": 1,
                "comments": [],
            }
        ],
    },
    {
        "summary": "Establish a data backup strategy for user data",
        "description": "Implement a robust data backup strategy to ensure that user data and task information are securely backed up regularly. Outline recovery procedures and perform periodic testing of backup integrity.",
        "assignee_count": 1,
        "labels_count": 2,
        "comments": [],
        "subtasks": [],
    },
    {
        "summary": "Conduct user testing for interface improvements",
        "description": "Organize user testing sessions to gather feedback on the app's interface and user experience. Analyze the results to identify pain points and areas for enhancement, prioritizing user needs.",
        "assignee_count": 3,
        "labels_count": 2,
        "comments": [],
        "subtasks": [],
    },
    {
        "summary": "Build a mobile-responsive version of the application",
        "description": "Ensure that the task management application is fully responsive, providing an optimal experience on mobile devices. Focus on usability, design, and performance across various screen sizes.",
        "assignee_count": 2,
        "labels_count": 3,
        "comments": ["Test the app on multiple devices to ensure consistency."],
        "subtasks": [],
    },
    {
        "summary": "Create onboarding documentation for new users",
        "description": "Develop comprehensive onboarding documentation to help new users navigate the task management app effectively. Include tutorials, feature descriptions, and troubleshooting guides to enhance user experience.",
        "assignee_count": 1,
        "labels_count": 1,
        "comments": [],
        "subtasks": [],
    },
]
